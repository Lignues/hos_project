<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hospital.member.repository.MemberRepository">
  
  <resultMap type="memberVO" id="memberMap">
  	<id property="memberId" column="memberId"/>
  	<result property="memberId" column="memberId"/>
  	<result property="memberPwd" column="memberPwd"/>
  	<result property="memberName" column="memberName"/>
  	<result property="email" column="email"/>
  	<result property="enabled" column="enabled"/>
  	<result property="regDate" column="regDate"/>
  	<result property="updateDate" column="updateDate"/>
  	<collection property="authList" resultMap="authMap"/>
  </resultMap>
  
  <resultMap type="authVO" id="authMap">
  	<result property="memberId" column="memberId"/>
  	<result property="auth" column="auth"/>
  </resultMap>
  
  <select id="read" resultMap="memberMap">
  	select h.memberId, memberPwd, memberName, email, enabled,
  		regDate, updateDate, a.auth 
  	from hos_member h left outer join hos_member_auth a
	on h.memberId = a.memberId where h.memberId = #{memberId}
  </select>
    
  <insert id="insert">
  	insert into hos_member(memberId, memberPwd, memberName, email)
  	values(#{memberId}, #{memberPwd}, #{memberName}, #{email})
  </insert>
  
  <select id="selectById" resultType="memberVO">
	select memberId, memberPwd, memberName, email
	from hos_member where memberId = #{memberId}
	</select>
	
  <update id="update">
	update hos_member set
		memberPwd = #{memberPwd}
	where memberId = #{memberId}
  </update>
  
  <select id="selectByEmailAndName" resultType="memberVO">
	select * from hos_member 
	where email = #{email} and memberName = #{memberName}
  </select>
  
  <select id="totalMemberCount" resultType="int">
	select count(memberId) from hos_member	
  </select>
  
  <select id="memberList" resultType="memberAuthDTO">
  	<![CDATA[
  	select * from  
    	(select rownum as rn, c.* from      
	        (SELECT h.memberId, memberPwd, memberName, email, enabled, regDate, updateDate, COUNT(a.memberId) AS authCount
	        FROM hos_member h
	        LEFT OUTER JOIN hos_member_auth a ON h.memberId = a.memberId
	        GROUP BY h.memberId, memberPwd, memberName, email, enabled, regDate, updateDate
	        order by authCount desc) c where rownum <= #{maxRow}
     ) where rn > #{minRow}
  	]]>
  </select>
  
  <delete id="deleteById">
  	delete from hos_member where memberId = #{memberId}
  </delete>
  
  <select id="checkBannedDay" resultType="int">
	select ban from hos_member where memberId = #{memberId}
  </select>
  
  <update id="banById">
  	update hos_member set ban = ban + #{banDay} where memberId = #{memberId}
  </update>
  
</mapper>